<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Autentificare" xml:space="preserve">
    <value>Autentificare</value>
  </data>
  <data name="BineAiVenit" xml:space="preserve">
    <value>Bine ati venit!</value>
  </data>
  <data name="ConfirmareParola" xml:space="preserve">
    <value>Confirmare parola</value>
  </data>
  <data name="CreareCont" xml:space="preserve">
    <value>Nu ai cont?Creeaza-ti unul!</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Adresa Email</value>
  </data>
  <data name="IntroducetiDatele" xml:space="preserve">
    <value>Introduceti datele pentru crearea contului!</value>
  </data>
  <data name="Nume" xml:space="preserve">
    <value>Nume</value>
  </data>
  <data name="Parola" xml:space="preserve">
    <value>Parola</value>
  </data>
  <data name="rfvNume" xml:space="preserve">
    <value>Numele!</value>
  </data>
  <data name="rfvParola" xml:space="preserve">
    <value>Parola!</value>
  </data>
  <data name="SalvareCont" xml:space="preserve">
    <value>Salvare Cont</value>
  </data>
  <data name="compareValidatorParola" xml:space="preserve">
    <value>Parola nu corespunde!</value>
  </data>
  <data name="rfvEmail" xml:space="preserve">
    <value>Adresa Email!</value>
  </data>
  <data name="ValidareLogin" xml:space="preserve">
    <value>Datele sunt incorecte sau contul nu a fost aprobat/activat!Reincercati!</value>
  </data>
  <data name="AdministreazaConturi" xml:space="preserve">
    <value>Administreaza Conturi</value>
  </data>
  <data name="InregistrareSucces" xml:space="preserve">
    <value>Inregistrare cu succes!</value>
  </data>
  <data name="NuAdmin" xml:space="preserve">
    <value>Nu sunteti administrator!</value>
  </data>
  <data name="GestioneazaCereri" xml:space="preserve">
    <value>Gestionati cererile userilor!</value>
  </data>
  <data name="Actiuni" xml:space="preserve">
    <value>Actiuni</value>
  </data>
  <data name="Activ" xml:space="preserve">
    <value>Activ</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="Aprobat" xml:space="preserve">
    <value>Aprobat</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="Filtre" xml:space="preserve">
    <value>Filtre:</value>
  </data>
  <data name="Inactiv" xml:space="preserve">
    <value>Inactiv</value>
  </data>
  <data name="Inactivi" xml:space="preserve">
    <value>Inactivi</value>
  </data>
  <data name="Neaprobati" xml:space="preserve">
    <value>Neaprobati</value>
  </data>
  <data name="Respins" xml:space="preserve">
    <value>Respins</value>
  </data>
  <data name="InactiviNeaprobati" xml:space="preserve">
    <value>Inactivi si neaprobati</value>
  </data>
  <data name="TotiUtilizatorii" xml:space="preserve">
    <value>Toti Utilizatorii</value>
  </data>
  <data name="Detalii" xml:space="preserve">
    <value>Detalii Comanda</value>
  </data>
  <data name="maiMult" xml:space="preserve">
    <value>...mai mult</value>
  </data>
  <data name="ValoareComanda" xml:space="preserve">
    <value>Valoarea Comenzii</value>
  </data>
  <data name="AdaugaComanda" xml:space="preserve">
    <value>Adauga O Noua Comanda</value>
  </data>
  <data name="NuExistaComenzi" xml:space="preserve">
    <value>Nu exista nicio comanda efectuata</value>
  </data>
  <data name="AdaugaCos" xml:space="preserve">
    <value>Adauga in cos</value>
  </data>
  <data name="CautaProdus" xml:space="preserve">
    <value>Cauta Produs:</value>
  </data>
  <data name="Culoare" xml:space="preserve">
    <value>Culoare:</value>
  </data>
  <data name="Pret" xml:space="preserve">
    <value>Pret $:</value>
  </data>
  <data name="Producator" xml:space="preserve">
    <value>Producator:</value>
  </data>
  <data name="Produs" xml:space="preserve">
    <value>Produs:</value>
  </data>
  <data name="ProdusAdaugat" xml:space="preserve">
    <value>Produs adaugat in cos!</value>
  </data>
  <data name="Cantitate" xml:space="preserve">
    <value>Cantitate:</value>
  </data>
  <data name="FinalizareComanda" xml:space="preserve">
    <value>Verifica comanda si finalizeaza cumparaturile!</value>
  </data>
  <data name="FinalizareComandaBtn" xml:space="preserve">
    <value>Finalizare Comanda</value>
  </data>
</root>